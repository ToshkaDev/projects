/* eslint-disable no-mixed-requires, no-unused-expressions, no-magic-numbers */

'use strict'

// Local
const models = require('../../../models').withDummyConnection(),
	segsToolRunner = require('./segs.tool-runner')

describe('services', function() {
	describe('aseqs', function() {
		describe('segs', function() {
			let aseqs = null

			beforeEach(() => {
				aseqs = [
					models.Aseq.build({
						id: '8pduSfpL50c3yCBL08_A9g',
						sequence: 'MNLTLTRRLWMGFALMALLTLTSTLVGWYNLRFISQVEKDNTQALIPTMNMARQLSEASAWELFAAQNLTSADNEKMWQAQGRMLTAQSLKINALLQALREQGFDTTAIEQQEQEISRSLRQQGELVGQRLQLRQQQQQLSQQIVAAADEIARLAQGQANNATTSAGATQAGIYDLIEQDQRQAAESALDRLIDIDLEYVNQMNELRLSALRVQQMVMNLGLEQIQKNAPTLEKQLNNAVKILQRRQIRIEDPGVRAQVATTLTTVSQYSDLLALYQQDSEISNHLQTLAQNNIAQFAQFSSEVSQLVDTIELRNQHGLAHLEKASARGQYSLLLLGMVSLCALILILWRVVYRSVTRPLAEQTQALQRLLDGDIDSPFPETAGVRELDTIGRLMDAFRSNVHALNRHREQLAAQVKARTAELQELVIEHRQARAEAEKASQAKSAFLAAMSHEIRTPLYGILGTAQLLADNPALNAQRDDLRAITDSGESLLTILNDILDYSAIEAGGKNVSVSDEPFEPRPLLESTLQLMSGRVKGRPIRLATAIADDMPCALMGDPRRIRQVITNLLSNALRFTDEGYIILRSRTDGEQWLVEVEDSGCGIDPAKLAEIFQPFVQVSGKRGGTGLGLTISSRLAQAMGGELSATSTPEVGSCFCLRLPLRVATAPVPKTVNQAVRLDGLRLLLIEDNPLTQRITIEMLKTSGAQIVAVGNAAQALETLQNSEPFAAALVDFDLPDIDGITLARQLAQQYPSLVLIGFSAHVIDETLRQRTSSLFRGIIPKPVPREVLGQLLAHYLQLQVNNDQSLDVSQLNEDAQLMGTEKIHEWLVLFTQHALPLLDEIDIARASQDSEKIKRAAHQLKSSCSSLGMHIASQLCAQLEQQPLSAPLPHEEITRSVAALEAWLHKKDLNAI'
					}),
					models.Aseq.build({
						id: 'dYTwPLwRnTYVJoPa7itrFg',
						sequence: 'MKYLASFRTTLKASRYMFRALALVLWLLIAFSSVFYIVNALHQRESEIRQEFNLSSDQAQRFIQRTSDVMKELKYIAENRLSAENGVLSPRGRETQADVPAFEPLFADSDCSAMSNTWRGSLESLAWFMRYWRDNFSAAYDLNRVFLIGSDNLCMANFGLRDMPVERDTALKALHERINKYRNAPQDDSGSNLYWISEGPRPGVGYFYALTPVYLANRLQALLGVEQTIRMENFFLPGTLPMGVTILDENGHTLISLTGPESKIKGDPRWMQERSWFGYTEGFRELVLKKNLPPSSLSIVYSVPVDKVLERIRMLILNAILLNVLAGAALFTLARMYERRIFIPAESDALRLEEHEQFNRKIVASAPVGICILRTADGVNILSNELAHTYLNMLTHEDRQRLTQIICGQQVNFVDVLTSNNTNLQISFVHSRYRNENVAICVLVDVSSRVKMEESLQEMAQAAEQASQSKSMFLATVSHELRTPLYGIIGNLDLLQTKELPKGVDRLVTAMNNSSSLLLKIISDILDFSKIESEQLKIEPREFSPREVMNHITANYLPLVVRKQLGLYCFIEPDVPVALNGDPMRLQQVISNLLSNAIKFTDTGCIVLHVRADGDYLSIRVRDTGVGIPAKEVVRLFDPFFQVGTGVQRNFQGTGLGLAICEKLISMMDGDISVDSEPGMGSQFTVRIPLYGAQYPQKKGVEGLSGKRCWLAVRNASLCQFLETSLQRSGIVVTTYEGQEPTPEDVLITDEVVSKKWQGRAVVTFCRRHIGIPLEKAPGEWVHSVAAPHELPALLARIYLIEMESDDPANALPSTDKAVSDNDDMMILVVDDHPINRRLLADQLGSLGYQCKTANDGVDALNVLSKNHIDIVLSDVNMPNMDGYRLTQRIRQLGLTLPVIGVTANALAEEKQRCLESGMDSCLSKPVTLDVIKQTLTLYAERVRKSRDS'
					})
				]
			})

			it('empty array resolves to empty result array', function() {
				return segsToolRunner([])
				.then((result) => {
					expect(result).deep.equal([])
				})
			})

			it('computes and updates aseqs segs (default target field)', function() {
				expect(aseqs[0].segs).not.ok
				expect(aseqs[1].segs).not.ok

				return segsToolRunner(aseqs)
				.then((resultAseqs) => {
					expect(aseqs === resultAseqs)
					expect(aseqs[0].segs).deep.equal([
						[18, 25],
						[120, 143],
						[431, 446]
					])
					expect(aseqs[1].segs).deep.equal([
						[315, 330],
						[452, 472],
						[514, 527]
					])
				})
			})

			it('alternate target field', function() {
				expect(aseqs[0].segs).not.ok
				expect(aseqs[1].segs).not.ok

				return segsToolRunner(aseqs, 'segssegs')
				.then((resultAseqs) => {
					expect(aseqs === resultAseqs)
					expect(aseqs[0].segs).not.ok
					expect(aseqs[0].segssegs).deep.equal([
						[18, 25],
						[120, 143],
						[431, 446]
					])
					expect(aseqs[1].segs).not.ok
					expect(aseqs[1].segssegs).deep.equal([
						[315, 330],
						[452, 472],
						[514, 527]
					])
				})
			})
		})
	})
})
